version: '3.4'

services:
  db:
    image: postgres
    container_name: "billio-db"
    restart: always
    environment:
      POSTGRES_DB: Data
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
     - "5437:5432"
    volumes:
     - postgres_data:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4
    container_name: "billio-pgadmin4"
    restart: always
    depends_on: 
      - db
    ports:
      - "8888:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: postgres@postgres.com
      PGADMIN_DEFAULT_PASSWORD: postgres
      PGADMIN_CONFIG_SERVER_MODE: 'False'

  liquibase:
    image: liquibase/liquibase
    container_name: "billio-liquibase"    
    depends_on: 
      - db
    volumes:
      - ./migrations:/liquibase/migrations
    command:
      - --changeLogFile=/migrations/dbChangeLog.yaml     
      - --url=jdbc:postgresql://db:5432/Data
      - --username=postgres
      - --password=postgres
      - update
    ports:
      - "8085:8080"

  webapi:      
    image: ${DOCKER_REGISTRY-}webapi    
    container_name: "billio-webapi"  
    depends_on: 
      - db
      - liquibase
    environment:
      - ASPNETCORE_Kestrel__Certificates__Default__Password=mypassword123456789mypassword
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
      - ASPNETCORE_ENVIRONMENT=LocalDocker
      - ASPNETCORE_HTTP_PORTS=8070
      - ASPNETCORE_HTTPS_PORTS=8071
    volumes:
      #- webapi:/https
      - ./certs:/https/  # Mount the /https folder for certificates
      #- ${USERPROFILE}/.aspnet/https:/https/  # If you want to use a local user store for dev certificates
      #- ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      #- ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro
      - ./Fonts:/Fonts
    build:
      context: .
      dockerfile: src/WebAPI/Dockerfile
    ports:
     - "8090:8070"
     - "8091:8071"

  nginx:
    image: nginx:latest
    container_name: "billio-nginx"
    depends_on:
      - webapi
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    ports:
      - "80:80"
      - "443:443"

  certbot:
    image: certbot/certbot
    container_name: "billio-certbot"
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    command: certonly --webroot --webroot-path=/var/www/certbot --email your-email@example.com --agree-tos --no-eff-email -d your-domain.com

volumes:
  postgres_data:
  webapi:
    driver: local
    name: aspnet_https_certs

networks:
  frontend:
    name: billio_network  