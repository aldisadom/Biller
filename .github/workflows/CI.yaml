name: CI/CD Pipeline

on:
  push:
    branches: [master]
  pull_request:
  release:
    types: [published]

env:
  DOTNET_VERSION: 8.0.x
  PROJECT_NAME: Billio.sln
  TESTS_LOCATION: ./tests/xUnitTests
  INTEGRATION_TESTS_LOCATION: ./tests/IntegrationTests

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    - name: Build
      run: dotnet build ${{ env.PROJECT_NAME }}

  test:
    name: Unit tests
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    - name: Run tests
      run: |
        dotnet test --configuration ${DOTNET_CONFIGURATION=Release} ${{ env.TESTS_LOCATION }} /p:CollectCoverage=true /p:CoverletOutputFormat=\"opencover\"

  integration-tests:
    name: Integration tests
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Run YAML files in deploy folder
        shell: bash
        run: |
          cd deploy
          ls
          kubectl apply -f postgres-pvc.yaml
          kubectl apply -f migrations-pvc.yaml

          kubectl apply -f temp-pod.yaml
          kubectl cp ../../migrations temp-pod:/mnt
          kubectl exec -it temp-pod -- /bin/sh
          cd /mnt/migrations
          ls -la
          exit
          kubectl delete pod temp-pod

          kubectl apply -f db-deployment.yaml
          kubectl apply -f pgadmin-deployment.yaml
          kubectl apply -f liquibase-job.yaml
          kubectl apply -f webapi-deployment.yaml
